.table {
  position: relative;
  display: table;
  width: 100%; }
  .table__row {
    display: table-row; }
  .table__row:not(.table__header):not(:first-of-type) {
    -webkit-box-shadow: inset 0 1px 0 0 #EDEDED;
            box-shadow: inset 0 1px 0 0 #EDEDED; }
  .table__row:not(.table__header):last-of-type {
    -webkit-box-shadow: inset 0 1px 0 0 #EDEDED, inset 0 -1px 0 0 #EDEDED;
            box-shadow: inset 0 1px 0 0 #EDEDED, inset 0 -1px 0 0 #EDEDED; }
  .table__row:not(.table__header):hover,
  .table__row:not(.table__header):hover + .table__row:not(.table__header):not(:last-of-type) {
    -webkit-box-shadow: inset 0 1px 0 0 transparent;
            box-shadow: inset 0 1px 0 0 transparent; }
  .table__row:not(.table__header):hover + .table__row:not(.table__header):last-of-type {
    -webkit-box-shadow: inset 0 1px 0 0 transparent, inset 0 -1px 0 0 #EDEDED;
            box-shadow: inset 0 1px 0 0 transparent, inset 0 -1px 0 0 #EDEDED; }
  .table__row:not(.table__header):hover .table__cell {
    background-color: rgba(50, 50, 93, 0.1); }
    .table__row:not(.table__header):hover .table__cell:first-of-type {
      border-top-left-radius: 6px;
      border-bottom-left-radius: 6px; }
    .table__row:not(.table__header):hover .table__cell:last-of-type {
      border-top-right-radius: 6px;
      border-bottom-right-radius: 6px; }
    .table__row:not(.table__header):hover .table__cell:not(:last-of-type):before {
      background-color: #F6F6F6; }
  .table__header {
    -webkit-box-shadow: inset 0 -1px 0 0 #517D58;
            box-shadow: inset 0 -1px 0 0 #517D58; }
  .table__cell {
    display: table-cell;
    vertical-align: middle;
    font-size: 15px;
    line-height: 21px;
    color: #172345; }
  .table__header .table__cell > *,
  .table__row:not(.table__header) .table__cell > * {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    padding: 0 20px; }
  .table__row:not(.table__header) .table__cell {
    position: relative;
    padding: 12px 0; }
    .table__row:not(.table__header) .table__cell:first-of-type {
      color: #32325D;
      font-size: 20px;
      line-height: 24px;
      letter-spacing: 0.2px;
      font-weight: 600; }
    .table__row:not(.table__header) .table__cell:not(:last-of-type):before {
      content: '';
      position: absolute;
      top: 50%;
      right: 0;
      -webkit-transform: translate3d(0, -50%, 0);
              transform: translate3d(0, -50%, 0);
      width: 1px;
      height: calc(100% - 24px);
      background-color: #EDEDED; }
    .table__row:not(.table__header) .table__cell > *:not(.pass) {
      min-height: 40px; }
    .table__row:not(.table__header) .table__cell > *.pass {
      width: 30px;
      line-height: 30px;
      border-radius: 50%;
      background-color: #172345;
      color: #fff;
      padding: 0;
      -webkit-box-pack: center;
          -ms-flex-pack: center;
              justify-content: center;
      margin: 0 20px; }
  .table__header .table__cell {
    line-height: 18px;
    font-weight: 600;
    letter-spacing: 0.1px;
    color: #32325D; }
    .table__header .table__cell > * {
      min-height: 60px;
      white-space: nowrap; }
      .table__header .table__cell > *.mob {
        display: none; }
  .table__footnote {
    position: absolute;
    z-index: 1;
    width: 100vw;
    height: 100%;
    top: 0;
    left: 0;
    display: none;
    background-color: rgba(50, 50, 93, 0.1);
    border-radius: 6px; }
    .table__footnote span {
      margin: auto;
      font-size: 40px;
      line-height: 50px;
      font-weight: 600;
      text-shadow: 2px 2px 4px #32325d;
      color: #fff; }
  .table.scroll .table__footnote {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex; }

.type-page__container + .type-page__container {
  margin: 40px 0 0 0; }

.type-page__header {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding: 40px 40px 0; }
  .type-page__header-img {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    margin: 0 -5px; }
    .type-page__header-img img {
      min-width: 225px; }
  .type-page__header-item {
    padding: 0 5px; }
  .type-page__header-title {
    margin: 0 0 0 40px; }
    .type-page__header-title > * {
      display: block; }
    .type-page__header-title .title {
      font-size: 32px;
      line-height: 45px;
      letter-spacing: 0.1px;
      color: #32325D; }
    .type-page__header-title .desc {
      margin: 10px 0 0 0;
      font-size: 18px;
      line-height: 27px;
      letter-spacing: 0.2px;
      color: #172345; }

.type-page__table {
  margin: 25px 0 0 0;
  padding: 0 20px 40px; }

@media (max-width: 1539px) {
  .type-page__header {
    padding: 30px 30px 0; }
  .type-page__table {
    margin: 30px 0 0 0; } }

@media (max-width: 1299px) and (min-width: 960px) {
  .type-page__header-title {
    margin: 25px 0 0 0; }
  .type-page__table {
    padding: 0 15px 40px; }
  .table__header .table__cell > *,
  .table__row:not(.table__header) .table__cell > * {
    padding: 0px 10px 0 15px; }
  .table__row:not(.table__header) .table__cell > *.pass {
    margin: 0 10px 0 15px; }
  .table__cell:nth-of-type(3) {
    min-width: 120px; }
  .table__row:not(.table__header) .table__cell:first-of-type {
    font-size: 18px; }
  .table__row:not(.table__header) .table__cell {
    font-size: 14px;
    line-height: 19px; } }

@media (max-width: 1299px) {
  .type-page__header {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column; }
  .type-page__header-title .title,
  .type-page__header-title .desc {
    text-align: center; }
  .table__header .table__cell > *.mob {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex; }
  .table__header .table__cell > *.mob + * {
    display: none; } }

@media (max-width: 959px) {
  .type-page__header {
    padding: 30px 20px 0; }
  .type-page__header-title {
    margin: 0 0 0 10px; }
  .type-page__table {
    margin: 25px 0 0 0; } }

@media (max-width: 779px) {
  .type-page {
    padding: 0 0 40px 0; }
  .type-page__header-title {
    margin: 15px 0 0 0; }
  .type-page__header-title .title {
    font-size: 28px;
    line-height: 39px;
    letter-spacing: 0.2px; }
  .type-page__header-title .desc {
    margin: 10px 0 0 0;
    font-size: 16px;
    line-height: 24px; }
  .table__header .table__cell > *.mob {
    display: none; }
  .table__header .table__cell > *.mob + * {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex; }
  .type-page__table {
    width: calc(100vw - 32px);
    overflow-x: auto;
    margin: 25px  0 0 0;
    padding: 0; }
  .table {
    padding: 0 15px; }
  .table__header .table__cell {
    font-size: 14px;
    line-height: 20px; }
  .table__row:not(.table__header) .table__cell:first-of-type {
    font-size: 18px; }
  .table__cell:nth-of-type(3) {
    min-width: 110px; }
  .table__header .table__cell > *,
  .table__row:not(.table__header) .table__cell > * {
    padding: 0px 10px 0 15px; }
  .table__row:not(.table__header) .table__cell > *.pass {
    margin: 0 10px 0 15px; } }

@media (max-width: 639px) {
  .type-page__container {
    margin: 25px 0 0 0; }
  .type-page__header {
    padding: 25px 15px 0; }
  .type-page__header-img img {
    min-width: auto; } }

@media (max-width: 479px) {
  .table__header .table__cell {
    font-size: 13px;
    line-height: 18px; }
  .table__cell {
    font-size: 14px;
    line-height: 20px; }
  .table__row:not(.table__header) .table__cell:first-of-type {
    font-size: 15px;
    line-height: 18px; }
  .table__header .table__cell > *,
  .table__row:not(.table__header) .table__cell > * {
    padding: 0px 10px; }
  .table__row:not(.table__header) .table__cell > *.pass {
    margin: 0 10px; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
